---
layout: post
title:  "About MVC"
date:   2018-12-16 23:23:53 -0600
categories: jekyll update
---

# MVC (Model-View-Controller) 
  - **Model** is where your data resides 
  - **View** is the face of the app (reusable)
    + UILabel is a **view** that presents text on the screen
  - **Controller** mediates between the view and the model, typically via the delegation pattern 
    + Controller entity won't know the concrete view it's dealing with. Instead, it will communicate with an abstraction via a protocol. 
    + **Example** can be ```UITableView``` communicate with its data source via the ```UITableViewDataSource``` protocol 


## View Layer 
  - **View** is where the user interacts with the app
  - It's the "dumb" part of the app, since it does not contain any **business logic**
    + ```UIView``` subclasses (From basic ```UIView``` to complex custom UI controls)
    + ```UIViewController``` which is strongly coupled with its own root ```UIView``` and its different cycles (```loadView```, ```viewDidLoad```)
    + Animations and ```UIViewController``` transitions 
    + Classes that are part of UIKit/AppKit, Core Animation and Core Graphics 
  - Checklist when inspecting view layer 
    + Does it interact with the model layer? (Should not)
    + Does it contain any business logic? (Should not)
    + Does it try to do anything not related to UI? (Should not) 
    
    
## Controller Layer 
  - **Controller Layer** is the least reusable part of your app 
  - It is the brain of the app (decides what happens next) 
  - It should be easily **testable** 
  - Layers are cleanly decoupled 
  
  
  ## Model Layer 
  - **Model Layer** contains model objects 
